# name: Run Tests

# on: [push]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ["3.9"]

#     steps:
    
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         python -m pip install pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Test with pytest
#       run: |
#         pytest

name: Example workflow for Codecov
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.9'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: $ea10b9a5-0c28-4234-8424-9da9a795f0bb
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml
        flags: pytest
        name: codecov-umbrella
        path_to_write_report: .coverage/reports/codecov.txt
        verbose: true
  